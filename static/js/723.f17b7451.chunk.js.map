{"version":3,"file":"static/js/723.f17b7451.chunk.js","mappings":"0OAqIA,UA3HA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SACxCI,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,KAAKX,QACnDY,GAAWC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACd,OAAQnB,GACN,IAAK,OACHC,EAAQkB,GAER,MACF,IAAK,QACHhB,EAASgB,GAET,MACF,IAAK,WACHd,EAAYc,KAaZC,EAAQ,WACZjB,EAAS,IACTF,EAAQ,IACRI,EAAY,KAqBd,OAnBAgB,EAAAA,EAAAA,YAAU,WACJf,IACFM,EAAS,gBAETU,EAAAA,GAAAA,KAAA,sEAEcZ,EAFd,4UAGE,CACEa,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAIf,CAACxB,EAAOI,KAET,gCACGJ,IACC,gCACG,KACD,SAAC,KAAD,CACEiB,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBM,aAAa,EACbL,cAAY,EACZM,KAAK,EACLC,kBAAgB,EAChBL,WAAS,EACTD,cAAY,QAIlB,UAAC,IAAD,CAAMO,SA/CW,SAAAjB,GACnBA,EAAEkB,iBACFrB,GAASsB,EAAAA,EAAAA,IAAQ,CAAEpC,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChCgB,KA4CE,WACE,UAAC,UAAD,CAAYiB,UAAU,OAAOC,UAAU,iBAAvC,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACEnB,MAAOjB,EACPc,SAAUA,EACVuB,KAAK,QACLvC,KAAK,QACLwC,UAAQ,EACRC,YAAY,oBAIhB,UAAC,UAAD,CAAYJ,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEnB,MAAOf,EACPY,SAAUA,EACVuB,KAAK,WACLvC,KAAK,WACLwC,UAAQ,EACRC,YAAY,iBAIhB,UAAC,UAAD,CAAYJ,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAAC,UAAD,oBACA,SAAC,YAAD,CACEnB,MAAOnB,EACPgB,SAAUA,EACVuB,KAAK,OACLvC,KAAK,OACLyC,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNH,UAAQ,QAIZ,SAAC,IAAD,CAAQI,QAAQ,UAAUL,KAAK,SAA/B","sources":["components/FormRegister/FormRegister.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { addUser } from 'redux/operetions';\r\n\r\n// import { Button, FormLabel } from './FormRegister.styled';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction FormRegister() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const logIn = useSelector(state => state.auth.logIn);\r\n  const stateName = useSelector(state => state.auth.user.name);\r\n  let navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addUser({ name, email, password }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setEmail('');\r\n    setName('');\r\n    setPassword('');\r\n  };\r\n  useEffect(() => {\r\n    if (logIn) {\r\n      navigate('../MyContact');\r\n\r\n      toast.info(\r\n        `\r\n         –ü—Ä–∏–≤–µ—Ç ü¶Ñ${stateName} —Ç—ã –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Ç –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ `,\r\n        {\r\n          position: 'top-center',\r\n          autoClose: 6000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n    }\r\n  }, [logIn, stateName]);\r\n  return (\r\n    <>\r\n      {logIn && (\r\n        <>\r\n          {' '}\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </>\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            value={email}\r\n            onChange={onChange}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            value={password}\r\n            onChange={onChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nexport default FormRegister;\r\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","logIn","useSelector","state","auth","stateName","user","navigate","useNavigate","dispatch","useDispatch","onChange","e","target","value","reset","useEffect","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","pauseOnFocusLoss","onSubmit","preventDefault","addUser","className","controlId","type","required","placeholder","pattern","title","variant"],"sourceRoot":""}