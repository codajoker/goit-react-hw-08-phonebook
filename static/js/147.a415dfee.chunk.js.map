{"version":3,"file":"static/js/147.a415dfee.chunk.js","mappings":"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","sources":["components/AppBar/AppBar.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOutUser } from 'redux/operetions';\r\n\r\nconst pages = ['Register', 'Login'];\r\nconst settings = ['Logout'];\r\n\r\nconst Navigation = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const logIn = useSelector(state => state.auth.logIn);\r\n  const name = useSelector(state => state.auth.user.name);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenNavMenu = event => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = event => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <NavLink to=\"/\">\r\n            {' '}\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n            >\r\n              Home\r\n            </Typography>\r\n          </NavLink>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map(page => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <NavLink to={page}>{page}</NavLink>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {logIn ? (\r\n              <Button\r\n                key=\"MyContact\"\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                <NavLink to=\"MyContact\"> MyContact</NavLink>\r\n              </Button>\r\n            ) : (\r\n              pages.map(page => (\r\n                <Button\r\n                  key={page}\r\n                  onClick={handleCloseNavMenu}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  <NavLink to={page}> {page}</NavLink>\r\n                </Button>\r\n              ))\r\n            )}\r\n          </Box>\r\n\r\n          {logIn && (\r\n            <Box sx={{ flexGrow: 0, display: 'flex', alignItems: 'center' }}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                component=\"div\"\r\n                sx={{\r\n                  flexGrow: 1,\r\n                  display: { xs: 'flex', md: 'flex' },\r\n                  marginRight: '10px',\r\n                }}\r\n              >\r\n                {name}\r\n              </Typography>\r\n              <Tooltip title=\"Open settings\">\r\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                  <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElUser}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={handleCloseUserMenu}\r\n              >\r\n                {settings.map(setting => (\r\n                  <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                    {/* <Typography >{setting}</Typography> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => dispatch(logOutUser())}\r\n                    >\r\n                      {' '}\r\n                      {setting}{' '}\r\n                    </button>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n          )}\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Navigation;\r\n"],"names":["pages","settings","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","logIn","useSelector","state","auth","name","user","dispatch","useDispatch","handleCloseNavMenu","handleCloseUserMenu","position","maxWidth","disableGutters","to","variant","noWrap","component","sx","mr","display","xs","md","flexGrow","size","onClick","event","currentTarget","color","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","my","alignItems","marginRight","title","p","alt","src","mt","setting","type","logOutUser"],"sourceRoot":""}