{"version":3,"file":"static/js/919.fba61713.chunk.js","mappings":"2NAEaA,EAAOC,EAAAA,GAAAA,GAAH,0FAKJC,EAAWD,EAAAA,GAAAA,GAAH,6C,GAGCA,EAAAA,GAAAA,OAAH,8C,sCCsDnB,EAzDoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,QAC/CC,GAAWC,EAAAA,EAAAA,MACXC,GAASL,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASM,UAC7CC,GAASN,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASO,UAC/CC,GAAgBC,EAAAA,EAAAA,UAClB,kBACET,EAASO,QAAO,SAAAG,GACd,OAAOA,EAAQC,KACZC,oBACAC,SAASN,EAAOK,0BAEvB,CAACZ,EAAUO,IAGb,OACE,SAACV,EAAD,UACGW,EAAcM,KAAI,SAAAJ,GACjB,OACE,UAACX,EAAD,WACGW,EAAQC,KADX,KACmBD,EAAQK,OACxBT,GACC,UAAC,IAAD,CACEU,GAAI,CACFC,WAAY,QAEdC,QAAQ,WACRC,MAAM,QACNC,UAAQ,EACRC,QAAS,kBAAMjB,GAASkB,EAAAA,EAAAA,IAAWZ,EAAQa,MAP7C,UASG,IATH,SAUS,QAGT,UAAC,IAAD,CACEP,GAAI,CACFC,WAAY,QAEdC,QAAQ,WACRC,MAAM,QACNE,QAAS,kBAAMjB,GAASkB,EAAAA,EAAAA,IAAWZ,EAAQa,MAN7C,UAQG,IARH,cAhBWb,EAAQa","sources":["components/ListContact/ListContact.styled.jsx","components/ListContact/ListContact.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style: none;\r\n`;\r\nexport const ListItem = styled.li`\r\n  margin-top: 10px;\r\n`;\r\nexport const Button = styled.button`\r\n  margin-left: 10px;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { List, ListItem } from './ListContact.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeItem } from '../../redux/operetions';\r\nimport { Button } from '@mui/material';\r\nconst ListContact = () => {\r\n  const contacts = useSelector(state => state.contacts.item);\r\n  const dispatch = useDispatch();\r\n  const loader = useSelector(state => state.contacts.loader);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  let filterContact = useMemo(\r\n    () =>\r\n      contacts.filter(contact => {\r\n        return contact.name\r\n          .toLocaleLowerCase()\r\n          .includes(filter.toLocaleLowerCase());\r\n      }),\r\n    [contacts, filter]\r\n  );\r\n\r\n  return (\r\n    <List>\r\n      {filterContact.map(contact => {\r\n        return (\r\n          <ListItem key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            {loader ? (\r\n              <Button\r\n                sx={{\r\n                  marginLeft: '15px',\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                disabled\r\n                onClick={() => dispatch(removeItem(contact.id))}\r\n              >\r\n                {' '}\r\n                Delete{' '}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                sx={{\r\n                  marginLeft: '15px',\r\n                }}\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                onClick={() => dispatch(removeItem(contact.id))}\r\n              >\r\n                {' '}\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\nListContact.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\nexport default ListContact;\r\n"],"names":["List","styled","ListItem","contacts","useSelector","state","item","dispatch","useDispatch","loader","filter","filterContact","useMemo","contact","name","toLocaleLowerCase","includes","map","number","sx","marginLeft","variant","color","disabled","onClick","removeItem","id"],"sourceRoot":""}