{"version":3,"file":"static/js/458.55447fd0.chunk.js","mappings":"0OAgHA,UAxGA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,SACxCI,GAAOH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,KAAKD,QAC9CE,GAAWC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACJR,IACFM,EAAS,gBAETG,EAAAA,GAAAA,KAAA,sEAEcL,EAFd,4UAGE,CACEM,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAIf,CAACjB,EAAOI,IAEX,IAAMc,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,SAAAC,GACf,MAAwBA,EAAEC,OAAlBlB,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,MACd,OAAQnB,GACN,IAAK,QACHP,EAAS0B,GAET,MACF,IAAK,WACHxB,EAAYwB,KAcZC,EAAQ,WACZ3B,EAAS,KAEX,OACE,gCACGG,IACC,gCACG,KACD,SAAC,KAAD,CACEU,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBa,aAAa,EACbZ,cAAY,EACZa,KAAK,EACLC,kBAAgB,EAChBZ,WAAS,EACTD,cAAY,QAIlB,UAAC,IAAD,CAAMc,SA3BW,SAAAP,GACnBA,EAAEQ,iBACFX,GAASY,EAAAA,EAAAA,IAAU,CAAElC,MAAAA,EAAOE,SAAAA,KAE5B0B,KAuBE,WACE,UAAC,UAAD,CAAYO,UAAU,OAAOC,UAAU,iBAAvC,WACE,SAAC,UAAD,6BACA,SAAC,YAAD,CACET,MAAO3B,EACPwB,SAAUA,EACVa,KAAK,QACL7B,KAAK,QACL8B,UAAQ,EACRC,YAAY,oBAIhB,UAAC,UAAD,CAAYJ,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACET,MAAOzB,EACPsB,SAAUA,EACVa,KAAK,WACL7B,KAAK,WACL8B,UAAQ,EACRC,YAAY,iBAIhB,SAAC,IAAD,CAAQC,QAAQ,UAAUH,KAAK,SAA/B","sources":["components/FormLogin/FormLogin.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { logInUser } from 'redux/operetions';\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction FormLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const logIn = useSelector(state => state.auth.logIn);\r\n  const name = useSelector(state => state.auth.user.name);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (logIn) {\r\n      navigate('../MyContact');\r\n\r\n      toast.info(\r\n        `\r\n         Привет 🦄${name} ты вошел в аккаунт и теперь можешь воспользоваться контактами `,\r\n        {\r\n          position: 'top-center',\r\n          autoClose: 6000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      );\r\n    }\r\n  }, [logIn, name]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'email':\r\n        setEmail(value);\r\n\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(logInUser({ email, password }));\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setEmail('');\r\n  };\r\n  return (\r\n    <>\r\n      {logIn && (\r\n        <>\r\n          {' '}\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </>\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            value={email}\r\n            onChange={onChange}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            value={password}\r\n            onChange={onChange}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            required\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nexport default FormLogin;\r\n"],"names":["useState","email","setEmail","password","setPassword","logIn","useSelector","state","auth","name","user","navigate","useNavigate","useEffect","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","dispatch","useDispatch","onChange","e","target","value","reset","newestOnTop","rtl","pauseOnFocusLoss","onSubmit","preventDefault","logInUser","className","controlId","type","required","placeholder","variant"],"sourceRoot":""}